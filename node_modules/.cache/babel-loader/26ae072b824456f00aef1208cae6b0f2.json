{"ast":null,"code":"\"use strict\";\n\nconst _ = require('lodash');\n\nconst cityMapping = require('./data/cityMap.json');\n\nfunction lookupViaCity(city) {\n  const cityLookup = _.filter(cityMapping, function (o) {\n    return o.city.toLowerCase() === city.toLowerCase();\n  });\n\n  if (cityLookup && cityLookup.length) {\n    return cityLookup;\n  } else {\n    return [];\n  }\n}\n\nfunction findPartialMatch(itemsToSearch, searchString) {\n  const searchItems = searchString.split(\" \");\n  const isPartialMatch = searchItems.every(function (i) {\n    return itemsToSearch.join().toLowerCase().indexOf(i.toLowerCase()) >= 0;\n  });\n  return isPartialMatch;\n}\n\nfunction findFromCityStateProvince(searchString) {\n  if (searchString) {\n    const cityLookup = _.filter(cityMapping, function (o) {\n      return findPartialMatch([o.city, o.state_ansi, o.province, o.country], searchString);\n    });\n\n    if (cityLookup && cityLookup.length) {\n      return cityLookup;\n    } else {\n      return [];\n    }\n  } else {\n    return [];\n  }\n}\n\nmodule.exports = {\n  lookupViaCity,\n  findFromCityStateProvince,\n  cityMapping\n};","map":{"version":3,"sources":["C:/Users/Sanju/Desktop/react/projects/Weather app/weather_app/node_modules/city-timezones/index.js"],"names":["_","require","cityMapping","lookupViaCity","city","cityLookup","filter","o","toLowerCase","length","findPartialMatch","itemsToSearch","searchString","searchItems","split","isPartialMatch","every","i","join","indexOf","findFromCityStateProvince","state_ansi","province","country","module","exports"],"mappings":"AAAA;;AACA,MAAMA,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,qBAAD,CAA3B;;AAEA,SAASE,aAAT,CAAuBC,IAAvB,EAA6B;AAC3B,QAAMC,UAAU,GAAGL,CAAC,CAACM,MAAF,CAASJ,WAAT,EAAsB,UAAUK,CAAV,EAAa;AAAE,WAAOA,CAAC,CAACH,IAAF,CAAOI,WAAP,OAAyBJ,IAAI,CAACI,WAAL,EAAhC;AAAoD,GAAzF,CAAnB;;AACA,MAAIH,UAAU,IAAIA,UAAU,CAACI,MAA7B,EAAqC;AACnC,WAAOJ,UAAP;AACD,GAFD,MAEO;AACL,WAAO,EAAP;AACD;AACF;;AAED,SAASK,gBAAT,CAA0BC,aAA1B,EAAyCC,YAAzC,EAAuD;AACnD,QAAMC,WAAW,GAAGD,YAAY,CAACE,KAAb,CAAmB,GAAnB,CAApB;AACA,QAAMC,cAAc,GAAGF,WAAW,CAACG,KAAZ,CAAkB,UAASC,CAAT,EAAY;AACjD,WAAON,aAAa,CAACO,IAAd,GAAqBV,WAArB,GAAmCW,OAAnC,CAA2CF,CAAC,CAACT,WAAF,EAA3C,KAA+D,CAAtE;AACH,GAFsB,CAAvB;AAGA,SAAOO,cAAP;AACH;;AAED,SAASK,yBAAT,CAAmCR,YAAnC,EAAiD;AAC/C,MAAIA,YAAJ,EAAkB;AAChB,UAAMP,UAAU,GAAGL,CAAC,CAACM,MAAF,CAASJ,WAAT,EAAsB,UAAUK,CAAV,EAAa;AAAE,aAAOG,gBAAgB,CAAC,CAACH,CAAC,CAACH,IAAH,EAAQG,CAAC,CAACc,UAAV,EAAqBd,CAAC,CAACe,QAAvB,EAAgCf,CAAC,CAACgB,OAAlC,CAAD,EAA6CX,YAA7C,CAAvB;AAAmF,KAAxH,CAAnB;;AACA,QAAIP,UAAU,IAAIA,UAAU,CAACI,MAA7B,EAAqC;AACnC,aAAOJ,UAAP;AACD,KAFD,MAEO;AACL,aAAO,EAAP;AACD;AACF,GAPD,MAOO;AACL,WAAO,EAAP;AACD;AACF;;AAEDmB,MAAM,CAACC,OAAP,GAAiB;AACftB,EAAAA,aADe;AAEfiB,EAAAA,yBAFe;AAGflB,EAAAA;AAHe,CAAjB","sourcesContent":["\"use strict\";\nconst _ = require('lodash')\nconst cityMapping = require('./data/cityMap.json')\n\nfunction lookupViaCity(city) {\n  const cityLookup = _.filter(cityMapping, function (o) { return o.city.toLowerCase() === city.toLowerCase() })\n  if (cityLookup && cityLookup.length) {\n    return cityLookup\n  } else {\n    return []\n  }\n}\n\nfunction findPartialMatch(itemsToSearch, searchString) {\n    const searchItems = searchString.split(\" \");\n    const isPartialMatch = searchItems.every(function(i) {\n        return itemsToSearch.join().toLowerCase().indexOf(i.toLowerCase()) >= 0;\n    })\n    return isPartialMatch\n}\n\nfunction findFromCityStateProvince(searchString) {\n  if (searchString) {\n    const cityLookup = _.filter(cityMapping, function (o) { return findPartialMatch([o.city,o.state_ansi,o.province,o.country], searchString) })\n    if (cityLookup && cityLookup.length) {\n      return cityLookup\n    } else {\n      return []\n    }\n  } else {\n    return []\n  }\n}\n\nmodule.exports = {\n  lookupViaCity,\n  findFromCityStateProvince,\n  cityMapping\n};\n"]},"metadata":{},"sourceType":"script"}