{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sanju\\\\Desktop\\\\react\\\\projects\\\\Weather app\\\\weather_app\\\\src\\\\component\\\\Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport Weathercard from './Weathercard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Weather() {\n  _s();\n\n  const [city, setCity] = useState(\"kolkata\");\n  const [tempInfo, settempInfo] = useState({});\n\n  const getWeatherInfo = () => {\n    axios({\n      url: `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=8881252aad8ef0d26bf595951220c34e`,\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      const data = response.data;\n      const {\n        temp,\n        humidity,\n        pressure\n      } = data.main;\n      const {\n        main: weatherMood\n      } = data.weather[0];\n      const {\n        name\n      } = data;\n      const {\n        speed\n      } = data.wind;\n      const {\n        country,\n        sunset\n      } = data.sys;\n      const myWeatherInfo = {\n        temp,\n        humidity,\n        pressure,\n        weatherMood,\n        name,\n        speed,\n        country,\n        sunset\n      };\n      settempInfo(myWeatherInfo);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  useEffect(() => {\n    getWeatherInfo();\n    console.log(tempInfo);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrap\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"search\",\n            placeholder: \"Search...\",\n            className: \"searchTerm\",\n            autoFocus: true,\n            id: \"search\",\n            value: city,\n            onChange: e => {\n              setCity(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"searchButton\",\n            onClick: getWeatherInfo,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Weathercard, {\n        tempInfo: tempInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Weather, \"4Ln6pD2ehQZZV80sIdLMsjiLANY=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["C:/Users/Sanju/Desktop/react/projects/Weather app/weather_app/src/component/Weather.js"],"names":["React","useState","useEffect","axios","Weathercard","Weather","city","setCity","tempInfo","settempInfo","getWeatherInfo","url","method","headers","then","response","data","temp","humidity","pressure","main","weatherMood","weather","name","speed","wind","country","sunset","sys","myWeatherInfo","catch","error","console","log","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACf,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,SAAD,CAAhC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMS,cAAc,GAAG,MAAM;AACzBP,IAAAA,KAAK,CACD;AACIQ,MAAAA,GAAG,EAAG,qDAAoDL,IAAK,sDADnE;AAEIM,MAAAA,MAAM,EAAE,KAFZ;AAGIC,MAAAA,OAAO,EAAG;AAAE,wBAAe;AAAjB;AAHd,KADC,CAAL,CAMEC,IANF,CAOIC,QAAQ,IAAI;AACR,YAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAtB;AACA,YAAM;AAACC,QAAAA,IAAD;AAAOC,QAAAA,QAAP;AAAiBC,QAAAA;AAAjB,UAA8BH,IAAI,CAACI,IAAzC;AACA,YAAM;AAACA,QAAAA,IAAI,EAAEC;AAAP,UAAsBL,IAAI,CAACM,OAAL,CAAa,CAAb,CAA5B;AACA,YAAM;AAACC,QAAAA;AAAD,UAASP,IAAf;AACA,YAAM;AAACQ,QAAAA;AAAD,UAAUR,IAAI,CAACS,IAArB;AACA,YAAM;AAACC,QAAAA,OAAD;AAAUC,QAAAA;AAAV,UAAoBX,IAAI,CAACY,GAA/B;AAEA,YAAMC,aAAa,GAAG;AAClBZ,QAAAA,IADkB;AAElBC,QAAAA,QAFkB;AAGlBC,QAAAA,QAHkB;AAIlBE,QAAAA,WAJkB;AAKlBE,QAAAA,IALkB;AAMlBC,QAAAA,KANkB;AAOlBE,QAAAA,OAPkB;AAQlBC,QAAAA;AARkB,OAAtB;AAUAlB,MAAAA,WAAW,CAACoB,aAAD,CAAX;AACH,KA1BL,EA2BEC,KA3BF,CA2BSC,KAAD,IAAW;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAAmB,KA3BvC;AA4BH,GA7BD;;AA8BA7B,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,cAAc;AACdsB,IAAAA,OAAO,CAACC,GAAR,CAAYzB,QAAZ;AACH,GAHQ,CAAT;AAKA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,kCACI;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,WAAW,EAAC,WAAjC;AAA6C,YAAA,SAAS,EAAC,YAAvD;AAAoE,YAAA,SAAS,MAA7E;AAA8E,YAAA,EAAE,EAAC,QAAjF;AACI,YAAA,KAAK,EAAEF,IADX;AACiB,YAAA,QAAQ,EAAG4B,CAAD,IAAK;AAAC3B,cAAAA,OAAO,CAAC2B,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AAAwB;AADzD;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAQ,YAAA,SAAS,EAAC,cAAlB;AAAiC,YAAA,OAAO,EAAE1B,cAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eASI,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAIF;AAAzB;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAeH;;GAtDQH,O;;KAAAA,O;AAwDT,eAAeA,OAAf","sourcesContent":["import React,{useState, useEffect} from 'react'\r\nimport axios from \"axios\";\r\nimport Weathercard from './Weathercard';\r\n\r\nfunction Weather() {\r\n    const [city, setCity] = useState(\"kolkata\")\r\n    const [tempInfo, settempInfo] = useState({})\r\n\r\n    const getWeatherInfo = () => {\r\n        axios(\r\n            {\r\n                url: `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=8881252aad8ef0d26bf595951220c34e`,\r\n                method: 'GET',\r\n                headers : { 'Content-Type':'application/json' }\r\n            }\r\n        ).then(\r\n            response => {\r\n                const data = response.data;\r\n                const {temp, humidity, pressure } = data.main;\r\n                const {main: weatherMood} = data.weather[0];\r\n                const {name} = data;\r\n                const {speed} = data.wind;\r\n                const {country, sunset} = data.sys;\r\n\r\n                const myWeatherInfo = {\r\n                    temp,\r\n                    humidity,\r\n                    pressure,\r\n                    weatherMood,\r\n                    name,\r\n                    speed,\r\n                    country,\r\n                    sunset\r\n                }\r\n                settempInfo(myWeatherInfo)\r\n            }\r\n        ).catch((error) => {console.log(error)})\r\n    }\r\n    useEffect(() => {\r\n        getWeatherInfo();\r\n        console.log(tempInfo)\r\n    },)\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"wrap\">\r\n                    <div className=\"search\">\r\n                        <input type=\"search\" placeholder=\"Search...\" className=\"searchTerm\" autoFocus id=\"search\"\r\n                            value={city} onChange={(e)=>{setCity(e.target.value)}}\r\n                        />\r\n                        <button className=\"searchButton\" onClick={getWeatherInfo}>Search</button>\r\n                    </div>\r\n                </div>\r\n                <Weathercard tempInfo = {tempInfo}/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Weather;\r\n"]},"metadata":{},"sourceType":"module"}