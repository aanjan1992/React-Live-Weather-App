{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sanju\\\\Desktop\\\\react\\\\projects\\\\Weather app\\\\weather_app\\\\src\\\\component\\\\Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport cityTimezones from \"city-timezones\";\nimport Weathercard from './Weathercard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Weather() {\n  _s();\n\n  const [city, setCity] = useState(\"kolkata\");\n  const [tempInfo, settempInfo] = useState({}); // time differentlocation\n\n  const [cityLookup, setCityLookup] = useState(cityTimezones.lookupViaCity(\"Kolkata\"));\n  const [background, setBackground] = useState(\"#fafafa\");\n\n  const getWeatherInfo = () => {\n    axios({\n      url: `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=f610b69b3c6d7eb99d61f54215f3362e\n                `,\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      const data = response.data;\n      const {\n        temp,\n        humidity,\n        pressure\n      } = data.main;\n      const {\n        main: weatherMood\n      } = data.weather[0];\n      const {\n        name\n      } = data; // const {timezone} = data;\n\n      const {\n        speed\n      } = data.wind;\n      const {\n        country,\n        sunset\n      } = data.sys;\n      const myWeatherInfo = {\n        temp,\n        humidity,\n        pressure,\n        weatherMood,\n        name,\n        speed,\n        country,\n        sunset // timezone\n\n      };\n      settempInfo(myWeatherInfo); // background change\n\n      response.data ? setCityLookup(cityTimezones.lookupViaCity(myWeatherInfo.name)) && console.log(`name : ${myWeatherInfo.name}, timezonearray: ${cityTimezones.lookupViaCity(myWeatherInfo.name)}`) : setCityLookup(cityTimezones.lookupViaCity(\"Kolkata\"));\n      const timeNow = new Date().toLocaleTimeString('en-GB', {\n        timeZone: cityLookup[0].timezone\n      });\n      timeNow == undefined ? setBackground(\"#191970\") : \"5:00:00\" > timeNow > \"16:00:00\" ? setBackground(\"#191970\") : setBackground(\"fafafa\"); // background change\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  useEffect(() => {\n    getWeatherInfo();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrap\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"search\",\n            placeholder: \"Search...\",\n            className: \"searchTerm\",\n            autoFocus: true,\n            id: \"search\",\n            value: city,\n            onChange: e => {\n              setCity(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"searchButton\",\n            onClick: getWeatherInfo,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Weathercard, {\n        tempInfo: tempInfo,\n        background: background\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Weather, \"/KQd8z9k9sPYRc8IKePdYBAm/Ug=\");\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["C:/Users/Sanju/Desktop/react/projects/Weather app/weather_app/src/component/Weather.js"],"names":["React","useState","useEffect","axios","cityTimezones","Weathercard","Weather","city","setCity","tempInfo","settempInfo","cityLookup","setCityLookup","lookupViaCity","background","setBackground","getWeatherInfo","url","method","headers","then","response","data","temp","humidity","pressure","main","weatherMood","weather","name","speed","wind","country","sunset","sys","myWeatherInfo","console","log","timeNow","Date","toLocaleTimeString","timeZone","timezone","undefined","catch","error","e","target","value"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react'\r\nimport axios from \"axios\";\r\nimport cityTimezones from \"city-timezones\";\r\nimport Weathercard from './Weathercard';\r\n\r\nfunction Weather() {\r\n    const [city, setCity] = useState(\"kolkata\")\r\n    const [tempInfo, settempInfo] = useState({})\r\n    // time differentlocation\r\n    const [cityLookup, setCityLookup] = useState(cityTimezones.lookupViaCity(\"Kolkata\"))\r\n    const [background, setBackground] = useState(\"#fafafa\")\r\n    const getWeatherInfo = () => {\r\n        axios(\r\n            {\r\n                url: `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=f610b69b3c6d7eb99d61f54215f3362e\r\n                `,\r\n                method: 'GET',\r\n                headers : { 'Content-Type':'application/json' }\r\n            }\r\n        ).then(\r\n            response => {\r\n                const data = response.data;\r\n                const {temp, humidity, pressure } = data.main;\r\n                const {main: weatherMood} = data.weather[0];\r\n                const {name} = data;\r\n                // const {timezone} = data;\r\n                const {speed} = data.wind;\r\n                const {country, sunset} = data.sys;\r\n\r\n                const myWeatherInfo = {\r\n                    temp,\r\n                    humidity,\r\n                    pressure,\r\n                    weatherMood,\r\n                    name,\r\n                    speed,\r\n                    country,\r\n                    sunset\r\n                    // timezone\r\n                }\r\n                settempInfo(myWeatherInfo)\r\n                // background change\r\n                response.data ? setCityLookup(cityTimezones.lookupViaCity(myWeatherInfo.name)) && console.log(`name : ${myWeatherInfo.name}, timezonearray: ${cityTimezones.lookupViaCity(myWeatherInfo.name)}`)\r\n                :setCityLookup(cityTimezones.lookupViaCity(\"Kolkata\"));\r\n                const timeNow = new Date().toLocaleTimeString('en-GB', {timeZone : cityLookup[0].timezone })\r\n                timeNow == undefined?setBackground(\"#191970\") :(\"5:00:00\" > timeNow > \"16:00:00\" ? setBackground(\"#191970\"): setBackground(\"fafafa\"));\r\n                // background change\r\n            }\r\n        ).catch((error) => {console.log(error)})\r\n    }\r\n    useEffect(() => {\r\n        getWeatherInfo();\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"wrap\">\r\n                    <div className=\"search\">\r\n                        <input type=\"search\" placeholder=\"Search...\" className=\"searchTerm\" autoFocus id=\"search\"\r\n                            value={city} onChange={(e)=>{setCity(e.target.value)}}\r\n                        />\r\n                        <button className=\"searchButton\" onClick={getWeatherInfo}>Search</button>\r\n                    </div>\r\n                </div>\r\n                <Weathercard tempInfo = {tempInfo} background = {background}/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Weather;\r\n"]},"metadata":{},"sourceType":"module"}